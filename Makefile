BUILD_DIR := build
LIB_DIR := libs

CXX := clang++
MKDIR := mkdir -p

# TODO improve this
# If set to yeah, the targets are build as shared libraries
DYNAMIC := yeah

INCLUDE_DIRS += include
INCLUDE_DIRS += $(LIB_DIR)/cxxopts/include
INCLUDE_DIRS += $(LIB_DIR)/miniz-cpp
INCLUDE_DIRS += $(LIB_DIR)/cpp-httplib
INCLUDE_FLAGS := $(addprefix -I,$(INCLUDE_DIRS))
CXX_FLAGS := $(INCLUDE_FLAGS) -MMD -MP -std=c++2a -O0
LD_FLAGS := -std=c++2a -O0

NULLPOINTER_TARGET := nullpointer
NULLPOINTER_TARGET_STATIC := lib$(NULLPOINTER_TARGET).a
NULLPOINTER_TARGET_DYNAMIC := lib$(NULLPOINTER_TARGET).so
TARGET_LIBRARIES_STATIC += $(NULLPOINTER_TARGET_STATIC)
TARGET_LIBRARIES_DYNAMIC += $(NULLPOINTER_TARGET_DYNAMIC)
NULLPOINTER_TARGET_SRC_DIR := targets/nullpointer
NULLPOINTER_TARGET_SRCS := $(wildcard $(NULLPOINTER_TARGET_SRC_DIR)/*.cpp)
NULLPOINTER_TARGET_OBJS := $(NULLPOINTER_TARGET_SRCS:%=$(BUILD_DIR)/%.o)
SRCS += NULLPOINTER_TARGET_SRCS
OBJS += NULLPOINTER_TARGET_OBJS
NULLPOINTER_TARGET_INCLUDE_DIRS += $(NULLPOINTER_TARGET_SRC_DIR)
NULLPOINTER_TARGET_INCLUDE_FLAGS := $(addprefix -I,$(NULLPOINTER_TARGET_INCLUDE_DIRS))
NULLPOINTER_TARGET_CXX_FLAGS := $(CXX_FLAGS) $(NULLPOINTER_TARGET_INCLUDE_FLAGS) -pthread -fPIC -fno-use-cxa-atexit
NULLPOINTER_TARGET_LD_FLAGS := $(LD_FLAGS) -pthread -lcrypto -lssl

LOCAL_TARGET := local
LOCAL_TARGET_STATIC := lib$(LOCAL_TARGET).a
LOCAL_TARGET_DYNAMIC := lib$(LOCAL_TARGET).so
TARGET_LIBRARIES_STATIC += $(LOCAL_TARGET_STATIC)
TARGET_LIBRARIES_DYNAMIC += $(LOCAL_TARGET_DYNAMIC)
LOCAL_TARGET_SRC_DIR := targets/local
LOCAL_TARGET_SRCS := $(wildcard $(LOCAL_TARGET_SRC_DIR)/*.cpp)
LOCAL_TARGET_OBJS := $(LOCAL_TARGET_SRCS:%=$(BUILD_DIR)/%.o)
SRCS += LOCAL_TARGET_SRCS
OBJS += LOCAL_TARGET_OBJS
LOCAL_TARGET_INCLUDE_DIRS += src
LOCAL_TARGET_INCLUDE_DIRS += $(LOCAL_TARGET_SRC_DIR)
LOCAL_TARGET_INCLUDE_FLAGS := $(addprefix -I,$(LOCAL_TARGET_INCLUDE_DIRS))
LOCAL_TARGET_CXX_FLAGS := $(CXX_FLAGS) $(LOCAL_TARGET_INCLUDE_FLAGS) -pthread -fPIC -fno-use-cxa-atexit
LOCAL_TARGET_LD_FLAGS := $(LD_FLAGS) -pthread -lcrypto -lssl

TARGET_LIBRARIES_FLAGS_STATIC += -L$(BUILD_DIR)
TARGET_LIBRARIES_FLAGS_STATIC += $(TARGET_LIBRARIES_STATIC:lib%.a=-l%)

TARGET_LIBRARIES_FLAGS_DYNAMIC += -L$(BUILD_DIR)
TARGET_LIBRARIES_FLAGS_DYNAMIC += $(TARGET_LIBRARIES_DYNAMIC:lib%.so=-l%)
TARGET_LIBRARIES_FLAGS := $(if $(DYNAMIC),$(TARGET_LIBRARIES_FLAGS_DYNAMIC),$(TARGET_LIBRARIES_FLAGS_STATIC))
#TARGET_LIBRARIES_FLAGS += -l$(NULLPOINTER_TARGET).a
#TARGET_LIBRARIES_FLAGS += -l$(LOCAL_TARGET).a

UPLOAD := upload
UPLOAD_SRC_DIR := src
UPLOAD_SRCS := $(wildcard $(UPLOAD_SRC_DIR)/*.cpp)
UPLOAD_OBJS := $(UPLOAD_SRCS:%=$(BUILD_DIR)/%.o)
SRCS += UPLOAD_SRCS
OBJS += UPLOAD_OBJS
UPLOAD_INCLUDE_DIRS := src
UPLOAD_INCLUDE_DIRS += $(LOCAL_TARGET_SRC_DIR)
UPLOAD_INCLUDE_DIRS += $(NULLPOINTER_TARGET_SRC_DIR)
UPLOAD_INCLUDE_FLAGS := $(addprefix -I,$(UPLOAD_INCLUDE_DIRS))
UPLOAD_CXX_FLAGS := $(CXX_FLAGS) $(UPLOAD_INCLUDE_FLAGS) -pthread
UPLOAD_LD_FLAGS := $(LD_FLAGS) $(TARGET_LIBRARIES_FLAGS) -pthread -lcrypto -lssl

DEPS := $(OBJS:.o=.d)

all: $(BUILD_DIR)/$(UPLOAD)

ifeq ($(DYNAMIC),yeah)
$(BUILD_DIR)/$(UPLOAD): $(UPLOAD_OBJS) $(BUILD_DIR)/$(LOCAL_TARGET_DYNAMIC) $(BUILD_DIR)/$(NULLPOINTER_TARGET_DYNAMIC)
	$(CXX) $(UPLOAD_OBJS) -o $@ $(UPLOAD_LD_FLAGS)
else
$(BUILD_DIR)/$(UPLOAD): $(UPLOAD_OBJS) $(BUILD_DIR)/$(LOCAL_TARGET_STATIC) $(BUILD_DIR)/$(NULLPOINTER_TARGET_STATIC)
	$(CXX) $(UPLOAD_OBJS) -o $@ $(UPLOAD_LD_FLAGS)
endif


$(BUILD_DIR)/$(LOCAL_TARGET_STATIC): $(LOCAL_TARGET_OBJS)
	ar rvs $@ $<
#	$(CXX) $(LOCAL_TARGET_OBJS) -o $@ $(LOCAL_TARGET_LD_FLAGS)

$(BUILD_DIR)/$(NULLPOINTER_TARGET_STATIC): $(NULLPOINTER_TARGET_OBJS)
	ar rvs $@ $<
#	$(CXX) $(NULLPOINTER_TARGET_OBJS) -o $@ $(NULLPOINTER_TARGET_LD_FLAGS)

$(BUILD_DIR)/$(LOCAL_TARGET_DYNAMIC): $(LOCAL_TARGET_OBJS)
	g++ --shared $< -o $@
#	$(CXX) $(LOCAL_TARGET_OBJS) -o $@ $(LOCAL_TARGET_LD_FLAGS)

$(BUILD_DIR)/$(NULLPOINTER_TARGET_DYNAMIC): $(NULLPOINTER_TARGET_OBJS)
	g++ --shared $< -o $@
#	$(CXX) $(NULLPOINTER_TARGET_OBJS) -o $@ $(NULLPOINTER_TARGET_LD_FLAGS)

# c++ source
$(UPLOAD_OBJS): $(BUILD_DIR)/%.cpp.o: %.cpp
	$(MKDIR) $(dir $@)
	$(CXX) $(UPLOAD_CXX_FLAGS) -c $< -o $@

# c++ source
$(LOCAL_TARGET_OBJS): $(BUILD_DIR)/%.cpp.o: %.cpp
	$(MKDIR) $(dir $@)
	$(CXX) $(LOCAL_TARGET_CXX_FLAGS) -c $< -o $@

# c++ source
$(NULLPOINTER_TARGET_OBJS): $(BUILD_DIR)/%.cpp.o: %.cpp
	$(MKDIR) $(dir $@)
	$(CXX) $(NULLPOINTER_TARGET_CXX_FLAGS) -c $< -o $@

.PHONY: clean

-include $(DEPS)

clean:
	$(RM) -r $(BUILD_DIR)
